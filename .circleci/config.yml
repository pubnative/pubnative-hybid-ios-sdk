version: 2
jobs:
    build:
        working_directory: ~/pubnative/pubnative-hybid-ios-sdk
        shell: /bin/bash --login -o pipefail
        macos:
            xcode: "16.2.0"
        resource_class: macos.m1.large.gen1
        steps:
            - checkout
            - run:
                name: Bundler Update
                command: gem install bundler --version 1.16.3
            - restore_cache:
                key: 1-gems-{{ checksum "Gemfile.lock" }}
            - run:
                name: Export Env
                command: echo -e "export RAILS_ENV=test\nexport RACK_ENV=test"\nexport LC_ALL=en_US.UTF-8\nexport LC_ALL=en_US.UTF-8 >> $BASH_ENV
            - run:
                name: Bundle Install
                command: bundle check || bundle install
                paths:
                    - vendor/bundle
                enviroment:
                    BUNDLE_JOBS: 4
                    BUNDLE_RETRY: 3
            - save_cache:
                key: 1-gems-{{ checksum "Gemfile.lock" }}
                paths:
                    - vendor/bundle
            - run:
                name: Check Bundle Versions
                command: bundle list
            - run:
                name: Install Firebase CLI
                command: npm install -g firebase-tools
            - run:
                name: Create CircleCI Artifacts Directory
                command: mkdir -p /tmp/circleci-artifacts
            - run:
                name: Create CircleCI Test Results Directory
                command: mkdir -p /tmp/circleci-test-results
            - run:
                name: List Schemes
                command: xcodebuild -workspace HyBid.xcworkspace -list
            - deploy:
                name: Install pods in HyBidTests
                command: |
                      PubnativeLite/Scripts/hybidtests.sh
            - run:
                name: Xcode Build
                command: xcodebuild
                            -workspace HyBid.xcworkspace
                            -scheme HyBid
                            -destination 'platform=iOS Simulator,OS=18.2,name=iPhone 16'
                            clean build
                            | tee /tmp/circleci-artifacts/build_xcodebuild.log
                            | xcpretty
                            -c
                            -r json-compilation-database --output /tmp/circleci-artifacts/build_compilation_database.json

            - deploy:
                name: Generate Demo App
                command: |
                    if [ "${CIRCLE_BRANCH}" == "beta" ] || [ "${CIRCLE_BRANCH}" == "development" ]; then
                      PubnativeLite/Scripts/demo.sh
                    fi
            - deploy:
                name: Generate framework
                command: |
                    if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "beta" ] || [ "${CIRCLE_BRANCH}" == "sdk-unification-base" ]; then
                      PubnativeLite/Scripts/generate.sh
                    fi
            - deploy:
                name: Publish to Firebase
                command: |
                    if [ "${CIRCLE_BRANCH}" == "beta" ] || [ "${CIRCLE_BRANCH}" == "development" ]; then
                      PubnativeLite/Scripts/publish.sh
                    fi
            - deploy:
                name: Namespace HyBid framework
                command: |
                    if [ "${CIRCLE_BRANCH}" == "sdk-unification-base" ]; then
                      PubnativeLite/Scripts/namespace.sh
                    fi
            - store_test_results:
                path: /tmp/circleci-test-results
            - store_artifacts:
                path: /tmp/circleci-artifacts
            - store_artifacts:
                path: /tmp/circleci-test-results

            - run:
                name: Setup Github release
                command: ./.circleci/circleci_setup.sh

#            - run:
#                name: Publish artifact to Github
#                command: |
#                  if [ "${CIRCLE_BRANCH}" == "master" ] ; then
#                     brew install go
#                     go get github.com/tcnksm/ghr
#                     ghr -t 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 -n "v2.11.1" -u pubnative -r pubnative-hybid-ios-sdk -delete 2.11.1 /tmp/circleci-artifacts -prerelease
#                  fi
#
#            - run:
#                name: Publish framework to cocoapods
#                command: |
#                  if [ "${CIRCLE_BRANCH}" == "master" ] ; then
#                     pod trunk push HyBid.podspec --allow-warnings --verbose --synchronous
#                  fi
